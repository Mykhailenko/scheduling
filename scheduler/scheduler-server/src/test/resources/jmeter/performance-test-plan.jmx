<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Fast node recovery group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1510044550000</longProp>
        <longProp name="ThreadGroup.end_time">1510044550000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Iterate over nodes number" enabled="true">
          <stringProp name="ForeachController.inputVal">nodesNumber</stringProp>
          <stringProp name="ForeachController.returnVal">nodesNumber</stringProp>
          <boolProp name="ForeachController.useSeparator">false</boolProp>
          <stringProp name="ForeachController.startIndex">0</stringProp>
        </ForeachController>
        <hashTree>
          <JUnitSampler guiclass="JUnitTestSamplerGui" testclass="JUnitSampler" testname="Test node recovery" enabled="true">
            <stringProp name="junitSampler.classname">performancetests.recovery.NodeRecoveryTest</stringProp>
            <stringProp name="junitsampler.constructorstring"></stringProp>
            <stringProp name="junitsampler.method">testNodeRecovery</stringProp>
            <stringProp name="junitsampler.pkg.filter">perfo</stringProp>
            <stringProp name="junitsampler.success">Test successful</stringProp>
            <stringProp name="junitsampler.success.code">1000</stringProp>
            <stringProp name="junitsampler.failure">Test failed</stringProp>
            <stringProp name="junitsampler.failure.code">0001</stringProp>
            <stringProp name="junitsampler.error">An unexpected error occurred</stringProp>
            <stringProp name="junitsampler.error.code">9999</stringProp>
            <stringProp name="junitsampler.exec.setup">true</stringProp>
            <stringProp name="junitsampler.append.error">false</stringProp>
            <stringProp name="junitsampler.append.exception">true</stringProp>
            <boolProp name="junitsampler.createinstancepersample">true</boolProp>
            <boolProp name="junitsampler.junit4">true</boolProp>
          </JUnitSampler>
          <hashTree>
            <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Should be fast (&lt;25 s)" enabled="true">
              <stringProp name="DurationAssertion.duration">25000</stringProp>
            </DurationAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Nodes numbers" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="nodesNumber1" elementType="Argument">
              <stringProp name="Argument.name">nodesNumber1</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nodesNumber2" elementType="Argument">
              <stringProp name="Argument.name">nodesNumber2</stringProp>
              <stringProp name="Argument.value">100</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nodesNumber3" elementType="Argument">
              <stringProp name="Argument.name">nodesNumber3</stringProp>
              <stringProp name="Argument.value">300</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="nodesNumber4" elementType="Argument">
              <stringProp name="Argument.name">nodesNumber4</stringProp>
              <stringProp name="Argument.value">500</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
